{"version":3,"sources":["src/Board.ts","src/Piece.ts","src/Player.ts","src/Game.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module"],"mappings":"AKAA,ACAA,IDAIA,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,SDDSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEjB,IAAAA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADc,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,AFLJ,IEKIA,AFLJ,IEKQ,CAACI,CFLT,GAAA,EEKI,KFLJ,CAAA,QAAA,CAAA;ACME,ACAC,ANEH,AGRA,ADAA,GIIE,CNIF,AGRA,ADAA,IFQA,CKFSnB,EFNT,ADAA,GCAA,ADAA,IGME,GFNF,ADAA,CCAA,ADAA,SCAA,ADAA,CCAA,ADAA;AGOC,ALCD,AIPA,OAAA,CAAA,8BAAA,CAAA;AEMEgB,ANCF,AGPA,ADCA,EIKEA,EHNF,ADCY,KIKH,CAACI,ENCV,AGPA,EGME,AJLF,CCDA,EGMiBL,IAAI,CAACK,AHNtB,CAAA,GGMiB,CAAUC,KAAV,CAAgB,AHNjC,CAAA,EGMiB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;ADEF,ACDER,ANIA,AIVF,EEMEA,IAAI,CAACS,AFNP,CAAA,CCOStB,ELGP,IAAA,CACkB,CMLlB,CAAgBuB,GDClB,ELGE,CKHsB,CLIe,GIXvC,CAAA,CEME,CAA6BT,OAA7B,EAAsCD,IAAI,CAACW,WAA3C;ADEA,ACDD,ANKW,AGZZ,ADAA,CAAA,CFYY,KAFV,AGVF,CAAA,CHYwB,EEZZ,MCAZ,CAAA,GDAA,EAAsB;AGSpB,ALEkB,AEVpB,AECA,EFDA,EECI,ECOE,GLEc,CIThB,CAAA,CFDJ,CAAA,EECA,CJSoB,GAAA,CEVpB,CAAA,GAAA,EFUoB,KEVpB;AGSI,ACDJ,ANGY,AGXZ,ADCA,EAAA,EIOIC,AHRJ,KHWY,CKFF,CFTV,CDCA,CAAA,CGQcxB,ACDA,ANGF,AGXZ,GGQiB,ANGL,EKFF,CHRV,CGQI,ACDJ,AHRA,ADCA,CFUY,AGXZ,EDCA,OCDA,ADCA,CCDA;AEUG,ALJO,AEJT,CAHD,EGSE,AHTU,CGWR,KLJM,EKICC,EHXW,CGWlB,EAAY,AHXJ,CFOF,GAAW,GEPT,CAAA,CFOF,SEPE,KAAA,OAAA,CAAA,UAAA,GAAU,EAAV,CAAZ;AGYI,ACFJ,ANFW,AGJX,IAAA,IEQQC,AFRR,CGMSuB,ANFE,GAAA,GKII,ALJe,GKIZ,ACFlB,CDEmB,ECFE,ENFiB,CKIdxB,ALJe,GKIZ,CAACE,KAAV,EAAiBC,ELJL,CAAuB,EKInC,CAAuB,ELJX,CAAnB,4DKIO,CAAd;ACDF,AHPF,ADCA,IAAA,EIMMoB,IJNN,MIME,EAAgB;ADEd,ACDA,ANEA,AGVJ,ADCA,QGQQtB,CLCC,GAAL,AGVJ,CHUa,EKDT,EAAa,KLCb,CAAmB,GAAnB,CAAuB,MAAvB;AKAE,ACDH,ANEA,AGaD,ADvBF,WCuBE,CDvBF,CGSaG,EFcX,GAAA,KEdqB,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD,AFaH,ADfA,QCeA,GDfA,ECeA,GAAA,CDfA,CAA4B,ECe5B,CAAA,CApBA,ADKA,EAA2C;AGG1C,ACDDsB,ANCA,AEH4B,EIE5BA,ANCA,IAAA,CAAA,EEH4B,GIElB,CJFkB,EIEfE,CNCb,AEH4B,CFG5B,GAAA,AEH4B,CAAe,CACzC,CFEF,EMDuB,CAAC,ONCpB,KMDgC,ANCpC,EAAgB;AMAd,ANCA,AEFA,QICIC,CNCC,IMDI,CNCT,EMDYC,CNCC,KAAb,EMDoB,CAACC,gBAAT,CAA0B,wBAA1B,CAAZ;ADEF,ALAC,AGTO,GHOR,MKEO,AFTC,GESR,CFTQ,GAAO,CAAP,CAmBR,CAhBA;AEOD,ACFG,AJDA,QAAG,CICE,GJDE,CICEC,CAAC,GAAG,AJDD,CICZ,EAAgBA,CAAC,GAAGH,GJDE,CAAC,CICE,CAACI,GJD1B,EAA6B,CIC7B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,ANCJ,AGNQ,ADIJ,EFEJ,IAAA,CAAA,EGNQ,CGKArB,CJDC,KICK,ANCd,CMDeJ,ANCf,AEFI,ECJI,CDIU,CACZ,CCLe,GHMrB,AEDU,EIAF,CAAkBsB,ANC1B,EGN6B,CAAC,CDKpB,CIAqB,AJArB,CIAsBG,CAAD,CAAL,CAASb,CJA7B,CAAU,CFChB,CMDQ,GHLa,CAAuB,EGKCR,EJAnB,CAAC,GIAwB,AHL9B,CGK+BV,AHL5C,CAeR,ADVM,CCJN,CDIkC,SIAW,EAAzC,EAAgE;ADGtE,ACFQY,ANCJ,AEFiC,QIC7BA,AJD6B,CGG5BN,ELDE,AEF6B,EAAC,CAAL,EFEpB,EMDE,CDElB,ACFmBsB,CDECrB,CLDhB,EKCJ,CCFwB,CDEC,ACFAwB,CAAD,CAAN,CAAV;ADGN,ACFK,ANCJ,AGNO,ADGiC,GFCzC,KEDyC,CGIlC,AFPC,CEOA,CHJoC,EAAC,CCHrC,CEOKxB,EFPwB,CEO9B,EAAWC,MFPV,CEOD,AFMP,CEN0B,AFPqB,sEEOxC,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI,AHHH,ADAkC,OAA5B,CADY,EAEZ,IAAI,OAAA,CAAA,IAAJ,CAAS,UAAU,CAAC,KAApB,EAA0B;AFGhC,AEHiC,EFGjC,IAAA,CAAA,CEHiC,GAAG,EAAC,CAAL,EFGhC,CAAA,MAAA,GAAA,YAAA;AKGFC,ACFIgB,ANAA,AGJO,ADA8B,IIIrCA,GDEG,CAACzB,AHNiC,CFIhC,AGJE,EDAiC,EAAC,CII/B,GAAG,ANAb,GKEJ,ALFoB,AGJT,CGIP,EDEmBD,AFNE,CHIrB,GGJyB,QAAA,CAAA,KEM7B,CFNyB,CAAW,QAAA,CAAA,UAAA,CAAW,KAAtB,CAAd;AEOXU,ACFG,ANAA,AGJQ,ADDuB,GIJT,ANOvB,EMEG,EDEE,ACXkB,AJIjB,CGOAH,ACXN,AJEkB,CCGT,CDAH,IAAI,IGMZ,EFNW,CEMUA,AHNT,CAAA,CCAa,IAAI,GDArB,CGMR,AHNqB,ICAQ,CAAA,KDAE,CCAN,ADAO,CCAI,IDA5B,EAA8B,ECAF,CAAA,UAAA,CAAW,KAAtB,CAAd;AGKV,AHHU,ADF4B,QAAA,CCE5B,EDF+B,EAAC,CCEhC,ADF2B,GCEnB,IAAI,OAAA,CAAA,KAAJ,CAAU,KAAK,WAAf,EAA4B,KAAK,WAAjC,CAAR;AHGT,AGDS,ADJkC,EFK3C,IAAA,CAAA,CEL2C,CCIlC,EDJqC,EAAC,GFK/C,CAAA,KGDS,GHCT,AGDyB,GHCzB,CGD6B,OAAA,CAAA,GHC7B,KGDyB,CAAa,OAAb,CAAhB;AGGX2B,ANDI,AGDO,ADL2B,MIOhC,CAACxB,AJPC,CAHY,CFSX,AGDE,CDJH,IIMR,AJNY,GIMKiB,ANDb,GAAgB,CELR,CCID,ADJC,GFKR,AGDuB,CGE3B,CJNQ,CAAU,CCIa,OAAA,CAAA,CDJH,CAAC,KAArB,CCImB,CAAa,ADJL,OCIR,CAAhB;AHER,AGEC,ADRgC,GFIlC,KGIQ,ADR0B,GAAG,EAAC,CAAL,QCQX,GAAG,QAAQ,CAAC,aAAT,CAAuB,kBAAvB,CAAvB;AACA,ADTsC,ICStC,IDTsC,GAAG,EAAC,KCS5B,CAAC,UAAf,CAA0B,MAA1B;AHFF,AGGE,ADV+B,EFOjC,EGGE,EHHF,CAAA,AEPM,CAJY,CAAd,OFWJ,CAAA,CGGgB,CAAC,IHHjB,GAAA,IGGE,CAA2B,KAAK,EHHlC,GGG6B,CAAW,GAAtC,EAHF,CAIE;AHHA,AENC,KAPD,GFaI,GENC,EFMI,QAAT,EAAmB;AACjB,AGGF,ADTE,SCSG,EHHE,AENA,GFML,CAAS,EENT,GAAc,CACZ,CCQJ,EHHE,CAAmB,AGGA,ADRb,GFKN,CAAuB,CGGC,EDRlB,CAAA,IFKN,IGGF,ADRI,CCGN,ADHmB,CCSjB,SDT2B,CAAC,KAAxB,EAA+B;AFMlC,AChCL,AC0BwC,ID1BxC,CD8BI,GEJoC,GFM7B,AENgC,CD1B3C,CC0B4C,CAAL,CD1BvC,OAAA,CAAA,UAAA,CAAA;ADiCM,AGGF,ADV0C,QAAA,CCUrC,EHHE,AEPsC,EAAC,CFO5C,AGGF,CHHW,AGGA,MAAX,GHHE,CAAmB,MAAnB,CAA0B,QAA1B;AACD,AGGD,AFpCJ,ACyBuC,IDzBvC,GCyBQ,CADY,CCYX,CDVD,ID1BR,AC0BY,GD1BZ,EEoCI,EDVQ,CCEV,ADFU,CCYR,GDZI,CAAS,KD1BjB,CAAA,IC0B2B,CAAC,ED1B5B,CAAA,EC0BQ,EAA0B,eD1BlC,CAAA,CAAA;AC0BmC,QAAA,GAAG,EAAC,CAAL;AFQ9B,AGKA,AFtCJ,ACyByC,IDzBzC,ICyByC,CFQhC,AGKA,EDbmC,CFQxC,CAAS,AERgC,CCazC,CAAW,EFtCf,CEsCI,CAAe,CFtCnB,EDiCI,GAAsB,KAAK,KAAN,AGKrB,AFtCJ,CEsCoC,AFtCpC,EDiCwC,KAAK,AGKzC,AFtCJ,CAAA,CEsC6C,GHLL,CAAW,MAAX,AGKM,CAAD,CHLpB,CGKsB,EHLe,EAA1D,ICjCJ,CAAA,CAAA;ADkCG,AGKG,ADd4B,GFEhC,IEFM,CAFY,ECgBV,ADbF,IAAI,CCaE,CAAC,KAAL,ADbE,CAAA,ICaa,CDbjB,CAAU,KCaZ,EAA4B,GDbN,CAAC,KAArB,EAA2B;ACc3B,AFvCR,ACyBoC,IDzBpC,ICyBoC,GAAG,EAAC,CAAL,CCcpB,AFvCf,GAAA,EEuCQ,aFvCR,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;ADkCA,AGMO,ADfmC,QAAA,CFS1C,EET6C,EFS7C,AET8C;AFrB9C,ACHA,ACwBmC,CFrBnC,EAAA,CCHA,GCwBQ,CAHY,EAIZ,IAAI,IDzBZ,GAAA,ACyBY,CAAA,KAAJ,CAAU,QDzBlB,CAAA,CCyB4B,CAAC,KDzB7B,ACyBQ,CDzBR,CCyBmC,sBDzBnC,CAAA,CAAA;AEyCM,ADhB8B,QAAA,ECgB1B,CAAC,ADhB4B,CCgB3B,CDhB4B,CAAL,ICgBzB,YAAoB,WAAxB,EAAqC;AHtC9B,AGsC+B,AFtC5C,ACsB0C,IDtB1C,GDAa,CAAA,AEsB6B,GAAG,CFtBhC,CEsBiC,CDtB9C,CDAa,IAAA;AGuCL,AFvCR,ACsBmC,OAA3B,CAJY,CAAd;AFcN,AGQQ,AFxCR,ACwBK,IFQL,KAAA,GChCA;ADgCA,AGSQ,AFxCN,ACwBC,WDxBD,CEwCU,MAAM,GAAA,AFxChB,CAAoB,IEwCJ,CAAV,MFxCN,EAAuC;AD+BzC,AC/BsB,SAAA,GD+BtB,QC/BsB,GAAA,WAAA;ADoCpB,AGKM,AFzCoC,ACE1C,EAAA,MAAA,CAAA,GCuCU,CAAC,CAAC,IDvCZ,CAAA,CCuCU,CAAS,ODvCnB,ECuCU,CAAmB,ADvC7B,QCuCU,CAA4B,GDvCtC,GCuCU,CAAJ,EAAyC;AHH/C,AGIQ,ADvCN,UCuCM,CHJR,AEnCS,KFmCT,AGIc,ADvCA,CFmCF,EGIK,CAAC,CAAC,CDvCjB,KCuCM,CHJR,EAAiC,WAAjC,EAAoD;AANpD,AGWO,AF1CP,ACGC,EDHD,CCCA,MF8BA,AGSM,GFxCN,CAAA,CD+BA,CGWa,EHXG,EAAhB,AGWiB,CAAC,CAAC,CF1CnB,CAAA,IE0CiB,CAAS,IF1C1B,GAAA,EE0CiB,CAAmB,QAAnB,CAA4B,AF1C7C,OE0CiB,CAAJ,EAA0C;AHVvD,AGWQ,AF1CN,SD+BF,CGWQ,EHXR,GAAmB,CGWL,GAAG,CAAC,CAAC,EHXQ,CAAC,GGWX,CAAS,SHXP,CAAuB,GGWlC,CAD+C,CHVpC,AGWqB,CHXxC,CAKoD,CAJpD;AGWO,AF1CL,ACsBJ,SCkBe,ADlBf,EDtBW,IE0CI,ADpBf,CDtBgB,WAAZ;ADgCF,AGWQ,AF1CP,ACNH,CAAA,EDGE,ACHF,MFqCE,GAAA,GAAkC,EGWnB,EHXuB,GGW9B,IHX0B,EAAlC,CAGoD,CAHL;AGYxC;AHRL,AClCJ,ACPa,OAAA,CAAA,CFyCJ,AClCT,GDkCI,CAAS,CEzCA,GAAA,EDOb,GDkCI,CEzCS,EFyCY,OAArB;AGSI,AFjDR,CAAA,EAAA,SEiDc,IAAI,GAAG,KAAI,CAAC,KAAL,CAAW,GAAX,CAAe,GAAf,CAAmB,MAAnB,CAAb,CAXmC,CAanC;AACA,mCHVK,KAAG;AACV,AC3CO,OAAA,CAAA,ED2CD,KAAK,GAAG,AC3CP,GAAA,KD2Ce,CAAC,IC3ChB,SD2CO,CAAuB,KAAvB,CAAd;AACA,MAAA,KAAK,CAAC,SAAN,GAAkB,KAAlB;AGSE,AFjCR,IAAA,QEiCY,IFjCZ,CEiCgB,CAAC,kBAAL,CAAwB,IAAxB,CAAJ,EAAmC;AHRrC,AGSI,AFlCV,MDyBM,MAAA,CAAK,GAAL,CAAS,WAAT,CAAqB,KAArB;AGUI,AFnCV,UEmCU,EFnCV,GEmCc,CAAC,MAAL,CAAY,IAAZ;AFjCR,WAAA,YAAA,CACkB,SADlB,EAES,EDuBI,KAAG,QCzBhB,EAEiC;ADwB3B,AGQE,AFjCU,SAAA,GDyBN,KAAK,AGQF,CFjCG,ED0BV,CC1BU,CEiCV,QFjCU,CD0BC,CAAC,SAAZ,GAAwB,IAAxB,CAA6B,UAAC,EAAD,EAAoB;AGQlD,AFjCE,SEcgC,AFdhC,CEmCH,IHVkC,UCzB/B,GAAA,EDyB8C,GAAA,EAAA,CAAA,OCzB9C;AD0BC,ACzBP,GALL,CAME,aDwBiB,eAAe,CAAC,GAAhB,KAAwB,GAAxB,IAA+B,eAAe,CAAC,GAAhB,KAAwB,GAA9D;AACD,SAFD,KAGA,WAAW,CAAC,SAAZ,GAAwB,IAAxB,CAA6B,UAAC,EAAD,EAAoB;AGQnD,YAAG,EHR+B,GGQ3B,CAAC,WHRyC,CGQjD,EHRiD,AGQ5B,EHR4B,CAAA;AAC7C,AGQF,AFlCR,EAAA,YAAA,CAAA,ED0BiB,OC1BjB,CAAA,IAAA,GD0BgC,AC1BhC,CD0BiC,GAAhB,KAAwB,CC1BpC,ED0BY,EC1BjB,ED0BgD,AC1B/B,EAAjB,EAAyB,WD0BsC,CAAC,GAAhB,KAAwB,GAA9D;AACD,AGQD,AFlCN,QAAG,CDwBG,ACxBF,CDoBA,AGcE,IFlCG,CEkCC,CAAC,IAAL,CAAU,AFlCZ,CAAa,EAAE,CEkCb,AFlCc,EEgCK,CAGnB,IFnCF,CAAJ,EAA6B;AD4BzB,AC3BF,YD2BQ,AC3BF,ID2BM,AC3BF,GD2BK,EC3BT,CAAU,CD2BG,IAAJ,CAAS,QC3BlB,CAAN;AD2B0B,AC1B3B,KAHsB,CAKvB,IDwB4B,GAAG,EAAA,GAAL;AAAO,AGQ3B,AF/BN,UDuBiC,AGQ3B,GHR8B,EAAA,AGQ1B,CAAC,UAAL;AHRoB,AGSrB,SHTY,EAAuB,KAAvB,CAAb,CATU,CASiC;AGU5C;AHRC,AGSH,AFjCD,KEDA,GHyBI,ACxBE,MDwBF,CAAK,GAAL,ACxBY,CDwBH,ECxBM,CDwBf,CAAa,ECxBM,EDwBF,CAAC,GAAlB,EAAuB,ECxBR,CAAgB,CDwB/B,CCxBiC,CDavB,ACbwB,CDwBJ,OCxBC,OAAkB,IAAnB,GAA2B,EAAE,CAAC,QAAH,EAA3B,GAA0C,IAAzD,CAAnB,CAPuB,CAQtB;AEiCF,GAtEH,CAwEE;AHXM,ACvBJ,IAAA,EAAE,CAAC,CDuBC,ECvBJ,CAAO,GDuBH,CAAK,ACvBT,EATuB,CAUvB,EDsBI,CAAW,IAAX,CAAgB,IAAhB;AACA,QAAA,KAAK,CAAC,WAAN,CAAkB,IAAI,CAAC,GAAvB;AGWN,AFjCE,EEiCF,EFjCE,EEiCF,CAAA,CFjCM,CAAC,GAAL,CAAS,GEiCX,CAAA,AFjCE,EAXuB,CAYvB,GEgCF,GAAA,UAAO,IAAP,EAAgB;AACd;AHzBE,AG0BF,AFjCA,QEiCG,CFjCE,EDOE,CG0BA,CAAC,EH1BG,GAAG,GAAG,AG0Bd,CH1BD,EAAkB,ACPpB,GDOuB,AG0BD,AFjCC,EAAE,CDOC,ACPA,CDOxB,AG0BF,EH1B6B,AG0BF,GH1BK,CCPhC,CDOE,EAAgC;AG2BhC,AFjCF,WAAO,KDMI,KCNX;ADoBG,AGcF,AFjCF,GAfD,EE4CgB,CAKd;;AF7BJ,SAAA,YAAA;AE8BI,AFzDJ,CAAA,EAAA,EA8BA,GE2BO,IAAI,CAAC,QAAL,GAAgB,SAAhB,KAA8B,KAAK,aAAL,CAAmB,IAApD,EAAyD;AACvD;AHpCF,AGqCC,KARa,CASd,GHtCK,IAAI,GAAG,GAAG,CAAf,EAAkB,GAAG,GAAG,CAAxB,EAA2B,GAAG,EAA9B,EAAgC;ACSpC,IAAA,IAAA,MDTa;AAoBR,ACXL;ADYG,AGkBC,AF9BJ,QE8BO,EF9BP,GE8BY,GF9BZ,EAAA,OE8BI,EAAqB;AACnB,AF/BoB,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;ADaxB,AGmBI,EHnBJ,KAAA,CAAA,GGmBS,MHnBT,CAAA,KGmBI,CHnBJ,AGmBsB,GHnBtB,KGmBI,GAFmB,CAGnB,GHpBJ;AACE,ACdJ,SDcS,ECdT,GDcI,CAAW,ACdf,GAAA,IDcI,CAAmB,UAAA,CAAA,EAAC;AAAI,AGoBtB,WAAK,EHpBiB,CAAC,CAAC,MAAF,EAAA,AGoBtB,CAAkB,MAAlB;AHpBgC,AGqBjC,AFlBJ,GAjBD,CACE,CDaE,AGMc,CAgBd;AHrBD,ACbD,GDWA;;AAGF,AGqBI,SHrBJ,AGqBS,KHrBT,OGqBI,GAAoB,IAApB,CAjBc,CAkBd;AHzDJ,ACsBE,CDtBF,CCsBE,CDtBF,GCsBE,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAoB;AEoClB,AFnCA,IEmCA,IAAI,AFnCE,CEmCD,MAAL,AFnCa,GEgBC,AFhBG,CEoCjB,EFpCoB,CAAC,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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["import { Piece } from './Piece';\nimport { Player } from './Player';\n\nexport interface Position {\n  row: number;\n  col: number;\n}\n\nexport class Cell {\n  private isActive = false;\n  readonly _el: HTMLElement = document.createElement('div');\n\n  constructor(\n    public readonly postion: Position, // 현재의 위치를 나타냄\n    private piece: Piece\n  ) { \n    this._el.classList.add('cell');\n  }\n  put(piece: Piece) {\n    this.piece = piece;\n  }\n  getPiece() {\n    return this.piece;\n  }\n  active() {\n    this.isActive = true;\n  }\n  deactive() {\n    this.isActive = false;\n  }\n  render() {\n    if (this.isActive) {\n      this._el.classList.add('active');\n    } else {\n      this._el.classList.remove('active');\n    }\n    this._el.innerHTML = (this.piece) ? this.piece.render() : '';\n  }\n}\n\nexport class Board {\n  cells: Cell[] = [];\n  _el: HTMLElement = document.createElement('div');\n  //키가 htmlelement가 되고 거기에 Cell이 들어가게된다.\n  map: WeakMap<HTMLElement, Cell> = new WeakMap()//키를 객체로 줄수있다.여기서 map는 htmlElement가 되는것이다.\n  // HTMLElement는 Cell은 값\n\n  constructor(upperPlayer: Player, lowerPlayer: Player) {\n    this._el.className = 'board';\n\n    for (let row = 0; row < 4; row++) {\n      const rowEl = document.createElement('div');\n      rowEl.className = 'row';\n      this._el.appendChild(rowEl);\n\n      for (let col = 0; col < 3; col++) {\n        const piece =\n          upperPlayer.getPieces().find(({ currentPosition }) => {\n            return currentPosition.col === col && currentPosition.row === row\n          }) ||\n          lowerPlayer.getPieces().find(({ currentPosition }) => {\n            return currentPosition.col === col && currentPosition.row === row\n          });\n\n        const cell = new Cell({ row, col }, piece);//null이 였다가 pieces를 받는다.\n\n        this.map.set(cell._el, cell); // 셀의 요소에 셀을 넣어준다.\n        this.cells.push(cell);\n        rowEl.appendChild(cell._el);\n      }\n    }\n  }\n  render() {\n    this.cells.forEach(v => v.render());\n  }\n}\n\nexport class DeadZone {\n  private cells: Cell[] = [];\n  readonly deadzoneEl = document\n    .getElementById(`${this.type}_deadzone`)\n    .querySelector('.card-body');\n\n  constructor(public type: 'upper' | 'lower') {\n\n    for (let col = 0; col < 4; col++) {\n      const cell = new Cell({ col, row: 0 }, null);\n      this.cells.push(cell);\n      this.deadzoneEl.appendChild(cell._el);\n    }\n  }\n  put(piece: Piece) {\n    const emptyCell = this.cells.find(v => v.getPiece() == null);\n    emptyCell.put(piece);\n    emptyCell.render();\n  }\n  render() {\n    this.cells.forEach(v => v.render());\n  }\n}","import { Cell ,Position} from \"./Board\";\nimport { PlayerType } from \"./Player\";\nimport loinImage from './images/lion.png';\nimport chickenImage from './images/chicken.png';\nimport griffImage from './images/griff.png';\nimport elophantImage from './images/elophant.png';\n\n\nexport class MoveResult{\n  constructor(private killedPiece : Piece){}\n  getkilled(){\n    //있으면 killedPiece가 반환 없으면 null반환\n    return this.killedPiece;\n  }\n}\n\n//게임을 말을 의미함\nexport interface Piece {\n  //말의 주인이 누구인지 판단\n  ownerType:PlayerType;\n  //말의 현재 위치\n  currentPosition:Position;\n  //말 한 셀에서 다른 셀로 이동(메서드)\n  //to에 해당하는 말에 다른 말이 올라오면 이전의 말은 죽은것\n  move(from: Cell, to: Cell):MoveResult;\n  render(): string;\n}\n\nabstract class DefaultPiece implements Piece{\n  \n  constructor(\n    public readonly ownerType:PlayerType,\n    public currentPosition:Position\n  ){}\n  //움직임에 대한 메소드 정의(공통적인 움직에 대한 로직만을 정의)- 모든 하위 타입이 재사용을 함\n  move(from: Cell, to: Cell): MoveResult {\n    if(!this.canMove(to.postion)){\n      throw new Error('cannot move!');\n    }\n\n    //moveResult을 생성해줌 MoveResult안에는 getPiece을 받는다.\n    //만약에 우리가 이동하는 곳인 to에 Piece가 있으면 걔(getPiece)를 준다. 곧 그 Piece는 죽은거다. null이면 죽인게 없다.\n    const moveResult = new MoveResult((to.getPiece() !== null) ? to.getPiece() :null);\n     //현재의cell에서 다른 cell로 this자신을 옮겨주고\n    to.put(this);\n    //이전 cell에서 자신을 지운다.\n    from.put(null);\n    //그리고 움직인 곳의 좌표자 현재의 위치가 되게 만들어준다.\n    this.currentPosition = to.postion;\n    return moveResult;\n  }\n  //하위 타입에서 positon을 받아서 각각의 움직임을 구현해준다.\n  abstract canMove(postion:Position):boolean;\n  //닭 호라이 코끼리 등의 렌더는 모두 다르므로 abstract 추상메소드를 사용하여 하위의 타입에서 구현하도록 강제한다. \n  abstract render();\n}\n\n\n// 사자 말 모두 DefaultPpiece를 상속하고 있다.\nexport class Lion extends DefaultPiece{\n  //각각의 canMove을 통해 특정 방향 어디로 움직일수있는지\n  //사자는 상하 좌우 \n  canMove(pos:Position){\n    const canMove = (pos.row === this.currentPosition.row +1 && pos.col === this.currentPosition.col)\n    ||(pos.row === this.currentPosition.row -1 && pos.col === this.currentPosition.col)\n    ||(pos.col === this.currentPosition.col +1 && pos.row === this.currentPosition.row)\n    ||(pos.col === this.currentPosition.col -1 && pos.row === this.currentPosition.row)\n    ||(pos.row === this.currentPosition.row +1 && pos.col === this.currentPosition.col +1)\n    ||(pos.row === this.currentPosition.row +1 && pos.col === this.currentPosition.col -1)\n    ||(pos.row === this.currentPosition.row -1 && pos.col === this.currentPosition.col +1)\n    ||(pos.row === this.currentPosition.row -1 && pos.col === this.currentPosition.col -1);\n  return canMove;\n  }\n  render():string{\n    return `<img class ='piece ${this.ownerType}' src=${loinImage} width=\"90%\" height=\"90%\"/>`;\n  }\n}\n//코끼리 말\nexport class Elephant extends DefaultPiece{\n  // 대각선 이동가능\n  canMove(pos:Position){\n    return (pos.row === this.currentPosition.row+1 && pos.col ===this.currentPosition.col +1)\n    ||(pos.row === this.currentPosition.row +1 && pos.col === this.currentPosition.col -1)\n    ||(pos.row === this.currentPosition.row -1 && pos.col === this.currentPosition.col +1)\n    ||(pos.row === this.currentPosition.row -1 && pos.col === this.currentPosition.col -1);\n  }\n  render():string{\n    return `<img class=\"piece ${this.ownerType}\" src=${elophantImage} width=\"90%\" height=\"90%\"/>`\n  }\n}\n\n//기린 말\nexport class Griff extends DefaultPiece {\n  canMove(pos: Position) {\n    return (pos.row === this.currentPosition.row + 1 && pos.col === this.currentPosition.col)\n      || (pos.row === this.currentPosition.row - 1 && pos.col === this.currentPosition.col)\n      || (pos.col === this.currentPosition.col + 1 && pos.row === this.currentPosition.row)\n      || (pos.col === this.currentPosition.col - 1 && pos.row === this.currentPosition.row);\n  }\n\n  render(): string {\n    return `<img class=\"piece ${this.ownerType}\" src=\"${griffImage}\" width=\"90%\" height=\"90%\"/>`;\n  }\n}\n\n//닭 말\nexport class Chick extends DefaultPiece{\n  // 앞으로만 이동가능\n  canMove(pos:Position){\n    //UPPER는 위로 가로 LOWER는 내려가게 설정\n    return this.currentPosition.row + ((this.ownerType === PlayerType.UPPER) ? +1 : -1) === pos.row;\n  }\n  render():string{\n    return `<img class=\"piece ${this.ownerType}\" src =${chickenImage} width=\"90%\" height=\"90%\"/>`\n  }\n}\n\n","import {Piece, Griff, Lion, Elephant, Chick} from './Piece';\n\nexport enum PlayerType {// 위 쪽과 아랫쪽의 플레이어\nUPPER ='UPPER',\nLOWER ='LOWER'\n}\n\nexport class Player{\n  private pieces :Piece[];\n  static type: any;\n\n  getPieces(){\n    return this.pieces;\n  }\n\n  constructor(public readonly type:PlayerType){//constuctor로 생성하면서 자신의 속성을 가진다. \n    //해당 플레이어가 자신의 타입에 맞게끔 piece를 가지도록 설정\n    //if비교문을 통해서 type이 PlayerType.UPPER인지 LOWER인지 구분\n    if(type === PlayerType.UPPER){\n      this.pieces = [\n        new Griff(PlayerType.UPPER, {row:0,col:0}),\n        new Lion(PlayerType.UPPER,{row:0,col:1}),\n        new Elephant(PlayerType.UPPER,{row:0,col:2}),\n        new Chick(PlayerType.UPPER,{row:1,col:1})\n      ]\n    }else{\n      this.pieces = [\n        new Elephant(PlayerType.LOWER, {row:3,col:0}),\n        new Lion(PlayerType.LOWER,{row:3,col:1}),\n        new Griff(PlayerType.LOWER,{row:3,col:2}),\n        new Chick(PlayerType.LOWER,{row:2,col:1})\n      ];\n    }\n  }\n}","import { Board, DeadZone, Cell } from './Board';\nimport { Player, PlayerType } from './Player';\nimport './Piece';\nimport { Lion, Piece } from './Piece';\n\n\nexport class Game {\n  ////게임내에서의 상태 관리\n  //현재 선택된 셀\n  private selectedCell : Cell;\n  // 턴처리\n  private turn = 0;\n  //현재 진행중인 플레이어\n  private currentPlayer: Player;\n  //게임에 대한 정보 선택\n  private gameInfoEl = document.querySelector('.alert');\n  //게임의 시작과 끝\n  private state: 'STARTED' | 'ENDED' = 'STARTED';//string union으로 처리하고 기본값은 STARTED로 설정\n\n\n  //위쪽 플레이어와 아랫쪽 플레이어 생성\n  readonly upperPlayer = new Player(PlayerType.UPPER);\n  readonly lowerPlayer = new Player(PlayerType.LOWER);\n\n  readonly board = new Board(this.upperPlayer, this.lowerPlayer);\n\n  readonly upperDeadZone = new DeadZone('upper');\n  readonly lowerDeadZone = new DeadZone('lower');\n\n\n  constructor() {\n    const boardContainer = document.querySelector('.board-container');\n    boardContainer.firstChild.remove();\n    boardContainer.appendChild(this.board._el);\n    //게임의 시작은 무조건 upperPlayer가 시작하는 것으로 정의\n    this.currentPlayer = this.upperPlayer;\n    //board에 말들을 렌더를 호출해준다.\n    this.board.render();\n    this.renderInfo();\n\n    //board에 이벤트 \n    this.board._el.addEventListener('click', (e) => {\n      if (this.state === 'ENDED') {\n        return false;\n      }\n\n      if (e.target instanceof HTMLElement) {//타입 가드 e.target은 HTMLElement의  인스턴스가 된다.\n        //cellElement는 화면에 그려지는 html셀 요소이다.\n        //그러나 우릴가 필요한 것은 Piece타입이다. Piece타입에서 move 또는 어떤 행위를 한다 , 즉 Piece타입의 객체를 알아야한다.\n        let cellEl: HTMLElement;\n        if (e.target.classList.contains('cell')) {\n          cellEl = e.target;\n        } else if (e.target.classList.contains('piece')) {\n          cellEl = e.target.parentElement;// parentElement가 cell인 것이다.\n        } else {\n          return false;\n        }\n        const cell = this.board.map.get(cellEl);\n\n        //현재 플레이아 piece와 + 현재 선택된 셀이 있을때 움직일수있게 해준다.\n        // 현재 유저일때는 내것을 계속 선택할수 있게 해준다.\n        if (this.isCurrentUserPiece(cell)) { \n          //select라는 메소드를 만들어서 현재의 셀을 선택을 하게 만들어주고\n          this.select(cell);\n          return false;\n        }\n\n        //선택된 셀이 있을때\n        if(this.selectedCell){\n          //셀을 이동시킴\n          this.move(cell);\n          //턴을 바꿔줌;\n          this.changeTurn();\n        }\n      }\n    });\n  }\n\n  //셀을 선택 할 때\n  select(cell:Cell){\n    //셀에 가져올 말이 없으면 return \n    if(cell.getPiece() == null){\n      return ;\n    }\n    //자신의 말일때만 선택이 되어야한다.자신의 말이 아닌 다른 말을 선택한다면 return;\n    if(cell.getPiece().ownerType !== this.currentPlayer.type){\n      return ;\n    }\n    // 선택된 셀이있으면\n    if(this.selectedCell){\n      // 선택된 셀을 선택 못하게 해주고 \n      this.selectedCell.deactive();\n      //렌더를 통해서 active된것을 없애준 다음에\n      this.selectedCell.render();\n    }\n    //셀에 할당을 해주고\n    this.selectedCell = cell;\n    //이 셀을 active 처리해준다.\n    cell.active();\n    // 그리고 렌더\n    cell.render();\n  }\n \n  //현재 currentUser의 Piece을 알 수 있게 된다.\n  isCurrentUserPiece(cell:Cell){\n    return cell != null && cell.getPiece() != null && cell.getPiece().ownerType === this.currentPlayer.type;\n  }\n\n  renderInfo(extraMessage?: string) {\n    //누구의 턴이 고 몇번째 인지 \n    this.gameInfoEl.innerHTML = `#${this.turn + 1}턴 ${this.currentPlayer.type} 차례 ${(extraMessage) ? '| ' + extraMessage : ''}`;\n  }\n\n  move(cell: Cell) {\n    this.selectedCell.deactive();\n    const killed = this.selectedCell.getPiece().move(this.selectedCell,cell).getkilled();\n    // selectedCell은 우리가 클릭한 셀로 바꾼다.\n    this.selectedCell = cell;\n\n    if(killed){\n      if(killed.ownerType === PlayerType.UPPER){\n        this.lowerDeadZone.put(killed);\n      }else{\n        this.upperDeadZone.put(killed)\n      }\n      if(killed instanceof Lion){\n        this.state = 'ENDED';\n      }\n    }\n  }\n\n  changeTurn() {\n    this.selectedCell.deactive();\n    this.selectedCell = null;\n\n    if (this.state === 'ENDED') {\n        this.renderInfo(`GAME ${PlayerType.UPPER  || PlayerType.LOWER} WIN!!`);\n    } else {\n      //턴을 하나 증가 시켜주고 \n      this.turn += 1;\n      //현재의 플레이어를 바꿔 줌;\n      this.currentPlayer = (this.currentPlayer === this.lowerPlayer) ? this.upperPlayer : this.lowerPlayer;\n      this.renderInfo();\n    }\n    //매 턴이 끝날때 마다 화면에 바뀐 turn이 렌더 되게끔한다.\n    this.board.render();\n  }\n}\n","import  { Game, } from './Game';\nimport 'bootstrap/dist/css/bootstrap';\nimport './styles/style.css';\n\nnew Game();\n ","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}